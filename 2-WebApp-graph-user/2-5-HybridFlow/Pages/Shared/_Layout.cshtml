@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Hybrid Sample Application</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://alcdn.msauth.net/browser/2.22.0/js/msal-browser.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        const msalInstance = new msal.PublicClientApplication({
            auth: {
            @{
                var clientId = Configuration["AzureAd:ClientId"];
                var instance = Configuration["AzureAd:Instance"];
                var domain = Configuration["AzureAd:Domain"];
                var redirectUri = Configuration["SpaRedirectUri"];

                @Html.Raw($"clientId: '{clientId}',");
                @Html.Raw($"redirectUri: '{redirectUri}',");
                @Html.Raw($"authority: '{instance}{domain}',");
                @Html.Raw($"postLogoutRedirectUri: '{redirectUri}',");
            }

            },
            cache: {
                cacheLocation: 'sessionStorage',
                storeAuthStateInCookie: false,
            }
        });

        (function () {
            const scopes = ["user.read"];
            @{
                var spaCode = Context.Session.GetString("Microsoft.Identity.Hybrid.Authentication");
                if (!string.IsNullOrEmpty(spaCode))
                {
                    @Html.Raw($"const code = '{spaCode}';");
                    Context.Session.Remove("Microsoft.Identity.Hybrid.Authentication");
                }
                else
                {
                    @Html.Raw($"const code = '';");
                }
            }
            if (!!code) {
                msalInstance
                    .handleRedirectPromise()
                    .then(result => {
                        if (result) {
                            console.log('MSAL: Returning from login');
                            return result;
                        }

                        const timeLabel = "Time for acquireTokenByCode";
                        console.time(timeLabel);
                        console.log('MSAL: acquireTokenByCode hybrid parameters present');

                        return msalInstance.acquireTokenByCode({
                            code,
                            scopes,
                        })
                            .then(result => {
                                console.timeEnd(timeLabel);
                                console.log('MSAL: acquireTokenByCode completed successfully', result);
                            })
                            .catch(error => {
                                console.timeEnd(timeLabel);
                                console.error('MSAL: acquireTokenByCode failed', error);
                                if (error instanceof msal.InteractionRequiredAuthError) {
                                    console.log('MSAL: acquireTokenByCode failed, redirecting')
                                    // Use loginHint from server to ensure same user
                                    signOut();
                                }
                            });
                    })
                }
            })();
    </script>
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">@ViewData["Title"] - ASP.NET Application</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Profile">Profile</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
                <ul class="nav navbar-nav navbar-right">
                    <li class="nav-item">
                        <a class="nav-link text-dark" onclick="signOut()" href="">Sign Out</a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - Hybrid Application - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>
    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>